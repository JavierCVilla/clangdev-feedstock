From 69ef85e404bd1ba4ce9843540772e93a76bfc84e Mon Sep 17 00:00:00 2001
From: Frederich Munch <marsupial@users.noreply.github.com>
Date: Thu, 30 Mar 2017 03:46:13 -0400
Subject: [PATCH 55/62] Pass mangled name to CodeGenerator::forgetDecl. From
 Roman Zulak and me.

Ignore mangling errors on Windows; fixes -Xclang -verify on Windows.
---
 include/clang/CodeGen/ModuleBuilder.h | 2 +-
 lib/CodeGen/ModuleBuilder.cpp         | 8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/include/clang/CodeGen/ModuleBuilder.h b/include/clang/CodeGen/ModuleBuilder.h
index 51a38fbabb..9b24d36439 100644
--- a/include/clang/CodeGen/ModuleBuilder.h
+++ b/include/clang/CodeGen/ModuleBuilder.h
@@ -89,7 +89,7 @@ public:
 
   void print(llvm::raw_ostream& out);
   void forgetGlobal(llvm::GlobalValue* GV);
-  void forgetDecl(const GlobalDecl& GD);
+  void forgetDecl(const GlobalDecl& GD, llvm::StringRef MangledName);
   llvm::Module* StartModule(llvm::StringRef ModuleName,
                             llvm::LLVMContext& C,
                             const CodeGenOptions& CGO);
diff --git a/lib/CodeGen/ModuleBuilder.cpp b/lib/CodeGen/ModuleBuilder.cpp
index 42662f4218..1b36636293 100644
--- a/lib/CodeGen/ModuleBuilder.cpp
+++ b/lib/CodeGen/ModuleBuilder.cpp
@@ -285,8 +285,7 @@ namespace clang {
       }
     }
 
-    void forgetDecl(const GlobalDecl& GD) {
-      StringRef MangledName = Builder->getMangledName(GD);
+    void forgetDecl(const GlobalDecl& GD, llvm::StringRef MangledName) {
       Builder->DeferredDecls.erase(MangledName);
     }
 
@@ -496,8 +495,9 @@ void CodeGenerator::forgetGlobal(llvm::GlobalValue* GV) {
   static_cast<CodeGeneratorImpl*>(this)->forgetGlobal(GV);
 }
 
-void CodeGenerator::forgetDecl(const GlobalDecl& GD) {
-  static_cast<CodeGeneratorImpl*>(this)->forgetDecl(GD);
+void CodeGenerator::forgetDecl(const GlobalDecl& GD,
+                               llvm::StringRef MangledName) {
+  static_cast<CodeGeneratorImpl*>(this)->forgetDecl(GD, MangledName);
 }
 
 
-- 
2.18.0

