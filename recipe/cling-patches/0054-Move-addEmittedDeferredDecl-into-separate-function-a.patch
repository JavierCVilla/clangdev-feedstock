From de7d882dabaf5b7879725d9c930d76108ed815c2 Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Fri, 31 Mar 2017 10:04:45 +0200
Subject: [PATCH 54/62] Move addEmittedDeferredDecl() into separate function;
 also handle "structors".

---
 lib/CodeGen/CodeGenModule.cpp |  1 +
 lib/CodeGen/CodeGenModule.h   | 25 +++++++++++++++----------
 2 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/lib/CodeGen/CodeGenModule.cpp b/lib/CodeGen/CodeGenModule.cpp
index 6ad0830447..c41fe622df 100644
--- a/lib/CodeGen/CodeGenModule.cpp
+++ b/lib/CodeGen/CodeGenModule.cpp
@@ -1809,6 +1809,7 @@ void CodeGenModule::EmitGlobal(GlobalDecl GD) {
   if (MustBeEmitted(Global) && MayBeEmittedEagerly(Global)) {
     // Emit the definition if it can't be deferred.
     EmitGlobalDefinition(GD);
+    addEmittedDeferredDecl(GD, StringRef());
     return;
   }
 
diff --git a/lib/CodeGen/CodeGenModule.h b/lib/CodeGen/CodeGenModule.h
index b899ab4511..8c67a5d0a1 100644
--- a/lib/CodeGen/CodeGenModule.h
+++ b/lib/CodeGen/CodeGenModule.h
@@ -316,6 +316,20 @@ private:
   /// yet.
   std::map<StringRef, GlobalDecl> DeferredDecls;
 
+  /// Decls that were DeferredDecls and have now been emitted.
+  std::map<StringRef, GlobalDecl> EmittedDeferredDecls;
+  void addEmittedDeferredDecl(GlobalDecl GD, StringRef MangledName) {
+    if (!isa<FunctionDecl>(GD.getDecl()))
+      return;
+    auto L = getFunctionLinkage(GD);
+    if (llvm::GlobalValue::isLinkOnceLinkage(L)
+        || llvm::GlobalValue::isWeakLinkage(L)) {
+      if (MangledName.empty())
+        MangledName = getMangledName(GD);
+      EmittedDeferredDecls[MangledName] = GD;
+    }
+  }
+
   /// This is a list of deferred decls which we have seen that *are* actually
   /// referenced. These get code generated when the module is done.
   struct DeferredGlobal {
@@ -326,19 +340,10 @@ private:
   std::vector<DeferredGlobal> DeferredDeclsToEmit;
   void addDeferredDeclToEmit(llvm::GlobalValue *GV, GlobalDecl GD,
                              StringRef MangledName) {
-    if (const ValueDecl* VD = dyn_cast<ValueDecl>(GD.getDecl())) {
-      if (VD->isWeak()) {
-        if (MangledName.empty())
-          MangledName = getMangledName(GD);
-        EmittedDeferredDecls[MangledName] = GD;
-      }
-    }
     DeferredDeclsToEmit.emplace_back(GV, GD);
+    addEmittedDeferredDecl(GD, MangledName);
   }
 
-  /// Decls that were DeferredDecls and have now been emitted.
-  std::map<StringRef, GlobalDecl> EmittedDeferredDecls;
-
   /// List of alias we have emitted. Used to make sure that what they point to
   /// is defined once we get to the end of the of the translation unit.
   std::vector<GlobalDecl> Aliases;
-- 
2.18.0

